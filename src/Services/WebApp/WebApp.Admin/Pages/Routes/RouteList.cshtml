@page "/Apps/{appId:int}/Routes"
@model RouteListModel
@{
}
<h1>Routes</h1>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Type</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var route in Model.Routes)
        {
            <tr>
                <td>@route.Id</td>
                <td>@route.Name</td>
                <td>@route.ResponseType</td>
                <td>@route.Status</td>
                <td>
                    <a href="@Url.Page("Edit", new { appId = route.AppId, routeId = route.Id })">Edit</a>
                    <a href="@Url.Page("Delete", new { appId = route.AppId, routeId = route.Id })">Delete</a>
                    <button type="button" data-id="@route.Id" data-status="@route.Status"
                        class="btn text-secondary jsUnblockButton">
                        @(route.Status == Domain.Enums.RouteStatus.Blocked ? "Unblock" : "Block")
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.AntiForgeryToken()
<script>
    $(function () {
        $(".jsUnblockButton").click(function () {
            const id = $(this).data("id");
            const status = $(this).data("status");
            const confirmMessage = status === '@Domain.Enums.RouteStatus.Blocked'
            ? "Are you sure you want to unblock this route?"
                : "Are you sure you want to block this route?";
            if (!confirm(confirmMessage)) {
                return;
            }

            $.ajax({
                url: '@Url.Page("/Routes/RouteList", "ChangeStatus")',
                data: {
                    id: id,
                    status: status === '@Domain.Enums.RouteStatus.Blocked'
                        ? '@Domain.Enums.RouteStatus.Active'
                        : '@Domain.Enums.RouteStatus.Blocked'
                },
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function () {
                    window.location.reload();
                }
            });
        });
    });
</script>