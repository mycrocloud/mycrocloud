services:
  db:
    image: postgres:16.2-alpine
    container_name: mycrocloud-db
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  db-migrator:
    image: mycrocloud-db-migrator
    build:
      dockerfile: WebApp.Migrations/Dockerfile
    container_name: mycrocloud-db-migrator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db

  api:
    image: mycrocloud-api
    build:
      dockerfile: WebApp.Api/Dockerfile
    container_name: mycrocloud-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy

  apigateway:
    image: mycrocloud-apigateway
    build:
      dockerfile: WebApp.ApiGateway/Dockerfile
    container_name: mycrocloud-apigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5001:8080"

  seq:
    image: datalust/seq
    container_name: mycrocloud-seq
    ports:
      - "8000:80"
      - "5341:5341"
    environment:
      - ACCEPT_EULA=Y
      # 7Wy6ttuopDvTau
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=QDFtcJLYGKj1Ir6xyrydGr+u6tYcTn33xd4WCe629b6cPQgPXs3UaCYyWkzJaJAyTqNgG89fdTfjF9LQYDkqvdiMsudVmoPJc1Ho3WT0j98w
    volumes:
      - seq_data:/data
    #restart: "unless-stopped"

  redis:
    image: redis:alpine3.21

  rabbitmq:
    image: rabbitmq:4.0.9-alpine
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "check_running" ]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  db_data:
  seq_data:
