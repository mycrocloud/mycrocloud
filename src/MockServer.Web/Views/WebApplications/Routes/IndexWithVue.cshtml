@using MockServer.Web.Controllers
@model MockServer.Web.Models.WebApplications.Routes.RoutePageModel
@{
    ViewData["Title"] = Model.WebApplication.Name;
}
@section Scripts {
<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vuetify@3.1.9/dist/vuetify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"
    integrity="sha512-LUKzDoJKOLqnxGWWIBM4lzRBlxcva2ZTztO8bTcWPmDSpkErWx0bSP4pdsjNH8kiHAUPaT06UXcb+vOEZH+HpQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
}
<style>
    .context-menu {
        position: absolute;
        width: 60px;
    }
</style>
<div class="row">
    <div class="col-2">
        <partial name="/Views/WebApplications/_SideBar.cshtml" model="Model.WebApplication">
    </div>
    <div id="app" class="col-10">
        <div class="row">
            <div class="col-3">
                <div class="d-flex mt-1">
                    <input v-model="searchTerm" @@keyup="delayedSearch" class="form-control form-control-sm me-1"
                        type="text" placeholder="Search">
                    <button @@click="newRoute" class="btn btn-sm bg-violet-500 text-white">
                        <i class="bi bi-plus"></i>
                    </button>
                </div>
                <div class="route-list-container">
                    <route-list :routes="routes" @@click-route="openRoute" @@edit-route="editRoute"
                        @@create-route="createRoute"></route-list>
                </div>
            </div>
            <div class="col-9 h-100" id="route-details">
                <div v-if="openingRoute">
                    <form v-on:submit.prevent="onSubmit">
                        <div class="card mt-1">
                            <div class="card-header">
                                Basic Info
                            </div>
                            <div class="card-body">
                                <div>
                                    <small>Name</small>
                                    <input type="text" v-model="openingRoute.name" class="form-control form-control-sm"
                                        aria-autocomplete="none">
                                </div>
                                <div class="mt-1 d-flex">
                                    <div>
                                        <small>Method</small>
                                        <select v-model="openingRoute.method"
                                            class="form-select form-select-sm w-auto me-2">
                                            @foreach (var method in Model.HttpMethodSelectListItem)
                                            {
                                                <option value="@method.Value">@method.Text</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="flex-fill">
                                        <small>Path</small>
                                        <input type="text" v-model="openingRoute.path"
                                            class="form-control form-control-sm">
                                    </div>
                                </div>
                                <div class="mt-1">
                                    <small>Url</small>
                                    <div class="input-group input-group-sm">
                                        <input type="text" class="form-control"
                                            :value="openingRoute.method + ' ' + '@(string.Format("https://u{0}-{1}.mockserver.com", Model.WebApplication.User.Id, Model.WebApplication.Name))' + '/' + openingRoute.path" readonly>
                                        <button type="button" class="input-group-text ">
                                            <i class="bi bi-clipboard"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mt-1">
                            <div class="card-header">
                                Integration
                            </div>
                            <div class="card-body">
                                <small>Integration Type</small>
                                <div class="mt-1">
                                    @foreach (var type in Model.IntegrationTypeSelectListItem)
                                    {
                                        <div class="form-check form-check-inline">
                                            <input v-model="openingRoute.integrationType" class="form-check-input"
                                            type="radio" value="@type.Value">
                                            <label class="form-check-label">@type.Text</label>
                                        </div>
                                    }
                                </div>
                                <p class="form-text">If you change the integration type, configuration for current type
                                    will be lost.</p>
                            </div>
                        </div>
                        <div class="card mt-1">
                            <div class="card-header">
                                Authorization
                            </div>
                            <div class="card-body">
                                <div>
                                    <small>Authorization Type</small>
                                    <div class="mt-1">
                                        @foreach (var type in Model.AuthorizationTypeSelectListItem)
                                        {
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" value="@type.Value"
                                                v-model="openingRoute.authorization.type">
                                                <label class="form-check-label">@type.Text</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="mt-1">
                                    <small>Policy</small>
                                    <select class="form-select" v-model="openingRoute.authorization.policies"
                                        multiple="multiple" data-placeholder="Select policies...">
                                        @foreach (var policy in Model.PolicySelectListItem)
                                        {
                                            <option value="@policy.Value">@policy.Text</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="card mt-1">
                            <div class="card-header">
                                Request Validation
                            </div>
                            <div class="card-body">
                                <ul class="nav nav-tabs" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <button type="button" class="nav-link active py-1" data-bs-toggle="tab"
                                            data-bs-target="#request-param-tab">Queries</button>
                                    </li>
                                    <li class="nav-item">
                                        <button type="button" class="nav-link py-1" data-bs-toggle="tab"
                                            data-bs-target="#request-header-tab">Headers</button>
                                    </li>
                                    <li class="nav-item">
                                        <button type="button" class="nav-link py-1" data-bs-toggle="tab"
                                            data-bs-target="#request-body-tab">Body</button>
                                    </li>
                                </ul>
                                <div class="tab-content" style="min-height: 200px;">
                                    <div id="request-param-tab" class="tab-pane fade show active p-2" role="tabpanel">
                                        <table id="request-params" class="table table-sm p-0 m-0">
                                            <thead>
                                                <tr>
                                                    <th style="width: 20%" scope="col">Key</th>
                                                    <th style="width: 75%" scope="col">Constraints</th>
                                                    <th style="width: 5%" scope="col">Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr v-for="query in openingRoute.requestQueries">
                                                    <td class="align-middle"><input v-model="query.key" type="text"
                                                            class="form-control form-control-sm param-key"
                                                            placeholder="key" autocomplete="off">
                                                    </td>
                                                    <td class="align-middle">
                                                        <div class="d-flex">
                                                            <select class="js-query-constraint-list" multiple></select>
                                                            <button class="ms-2 js-query-constraint-button">
                                                                <i class="bi bi-box-arrow-in-up-right"></i></button>
                                                        </div>
                                                    </td>
                                                    <td class="align-middle"><button
                                                            class="btn param-delete text-gray btn-show-on-hover"><i
                                                                class="bi bi-trash"></i></button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div id="request-header-tab" class="tab-pane fade p-2" role="tabpanel">
                                        <table id="request-header-table" class="table table-sm p-0 m-0">
                                            <thead>
                                                <tr>
                                                    <th style="width: 20%" scope="col">Header</th>
                                                    <th style="width: 75%" scope="col">Constraints</th>
                                                    <th style="width: 5%" scope="col">Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="align-middle"><input type="text"
                                                            class="form-control form-control-sm" placeholder="name">
                                                    </td>
                                                    <td class="align-middle"><input type="hidden">
                                                    </td>
                                                    <td class="align-middle"><button
                                                            class="btn header-delete text-gray btn-show-on-hover"><i
                                                                class="bi bi-trash"></i></button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div id="request-body-tab" class="tab-pane fade p-2" role="tabpanel">
                                        <div class="mt-1">
                                            <div>
                                                <div class="form-check me-5">
                                                    <input class="form-check-input" type="checkbox">
                                                    <label class="form-check-label">Required</label>
                                                </div>
                                                <div>
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox">
                                                        <label class="form-check-label">Match Exactly</label>
                                                    </div>
                                                    <div>
                                                        <textarea class="form-control"></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card mt-2">
                                                <div class="card-header">
                                                    Fields Constrains
                                                </div>
                                                <div class="card-body">
                                                    <table id="request-header-table" class="table table-sm">
                                                        <thead>
                                                            <tr>
                                                                <th style="width: 20%" scope="col">Field</th>
                                                                <th style="width: 75%" scope="col">Constraints</th>
                                                                <th style="width: 5%" scope="col">Actions</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td class="align-middle"><input type="text"
                                                                        class="form-control form-control-sm"
                                                                        placeholder="field">
                                                                </td>
                                                                <td class="align-middle"><input type="hidden">
                                                                </td>
                                                                <td class="align-middle"><button
                                                                        class="btn header-delete text-gray btn-show-on-hover"><i
                                                                            class="bi bi-trash"></i></button>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mt-1">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </form>
                </div>
                <div v-else>
                    Click to show details
                </div>
            </div>
        </div>
    </div>
</div>
<template id="context-menu-template">
    <div class="btn-group-vertical dropdown-menu context-menu" role="group">
        <button name="btnDelete" type="button" class="dropdown-item btn btn-default text-danger">Delete</button>
    </div>
</template>
<!-- Modal -->
<template id="requestDeleteConfirmModalTemplate">
    <div class="modal fade" id="requestDeleteConfirmModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete confirm</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are your sure want to delete request?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button name="btnDelete" type="button" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
</template>
<template id="route-list-template">
    <div>
        <ul v-if="routes.length > 0" class="list-group list-group-flush mt-2">
            <li v-for="route in routes" :key="route.id" class="list-group-item px-2 py-1">
                <div class="row">
                    <div v-on:click="click(route.id)" class="col" style="position: relative;">
                        <a onclick="event.preventDefault()" href="#"
                            class="text-decoration-none stretched-link">{{route.name}}</a>
                        <div>
                            <small class="badge rounded-pill me-1" style="width: 60px;"
                                :class="getMethodClass(route.method)">{{route.method}}</small>
                            <small class="text-muted">/{{route.path}}</small>
                        </div>
                    </div>
                    <div class="p-0 my-auto" style="width: 40px;">
                        <button v-on:click="showContextMenu(route.id)" class="btn btn-sm" type="button">
                            <i class="bi bi-three-dots"></i>
                        </button>
                    </div>
                </div>
            </li>
        </ul>
    </div>
</template>
<template id="inline-constraint-modal">
    <div class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Constraints</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="required" />
                            <label class="form-check-label">Required</label>
                        </div>
                        <p class="form-text d-none">Used to enforce that a non-parameter value is present</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="type" />
                                <label class="form-check-label">Type</label>
                            </div>
                            <select class="ms-3 form-select form-select-sm" style="width: 100px;" name="type">
                                <option value="int">Int</option>
                                <option value="bool">Boolean</option>
                                <option value="datetime">Datetime</option>
                                <option value="decimal">Decimal</option>
                                <option value="double">Double</option>
                                <option value="float">Float</option>
                                <option value="guid">GUID</option>
                                <option value="long">Long</option>
                            </select>
                        </div>
                        <p class="form-text d-none">Used to enforce that a non-parameter value is present</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="minlength" />
                                <label class="form-check-label">Minimum Length</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm" style="width: 100px;" type="number"
                                name="minlength" placeholder="0" />
                        </div>
                        <p class="form-text d-none">Used to enforce that a non-parameter value is present</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="maxlength" />
                                <label class="form-check-label">Maximum Length</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm" style="width: 100px;" type="number"
                                name="maxlength" placeholder="100" />
                        </div>
                        <p class="form-text d-none">Used to enforce that a non-parameter value is present</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="length" />
                                <label class="form-check-label">Length</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm" style="width: 100px;" type="number"
                                name="length" placeholder="50" />
                        </div>
                        <p class="form-text d-none">Constrains value to be a string of a given length or within
                            a given range of lengths.</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="min" />
                                <label class="form-check-label">Min</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm" style="width: 100px;" type="number"
                                name="min" placeholder="0" />
                        </div>
                        <p class="form-text d-none">Constrains a route parameter to be a long with a minimum
                            value.</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="max" />
                                <label class="form-check-label">Max</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm" style="width: 100px;" type="number"
                                name="max" placeholder="100" />
                        </div>
                        <p class="form-text d-none">Constrains a route parameter to be an integer with a maximum
                            value.</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="range" />
                                <label class="form-check-label">Range</label>
                            </div>
                            <div class="ms-3 d-flex">
                                <input class="form-control form-control-sm" style="width: 100px;" type="number"
                                    name="range-min" placeholder="1" />
                                <label class="form-label mx-2">~</label>
                                <input class="form-control form-control-sm" style="width: 100px;" type="number"
                                    name="range-max" placeholder="100" />
                            </div>
                        </div>
                        <p class="form-text d-none">Constraints a route parameter to be an integer within a
                            given range of values.</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="alpha" />
                                <label class="form-check-label">Alpha</label>
                            </div>
                        </div>
                        <p class="form-text d-none">Constraints a route parameter to be an integer within a given range
                            of values.</p>
                    </div>
                    <hr />
                    <div>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="regex" />
                                <label class="form-check-label">Regex</label>
                            </div>
                            <input class="ms-3 form-control form-control-sm w-50" type="text" name="pattern"
                                placeholder="ab+c" />
                        </div>
                        <p class="form-text d-none">Constraints a route parameter to be an integer within a
                            given range of values.</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary">Ok</button>
                </div>
            </div>
        </div>
    </div>
</template>
<script>
    // Define the RouteList component
    const RouteList = {
        props: {
            routes: {
                type: Array,
                required: true
            }
        },
        template: '#route-list-template',
        methods: {
            click(id) {
                this.$emit('click-route', id);
            },
            editRoute(route) {
                this.$emit('edit-route', route);
            },
            createRoute() {
                this.$emit('create-route');
            },
            getMethodClass(method) {
                switch (method) {
                    case 'DELETE': return 'text-red';
                    case 'POST': return 'text-orange';
                    case 'PUT': return 'text-yellow';
                    case 'GET': return 'text-green';
                    default: return 'text-blue';
                }
            },
            showContextMenu(id) {
                //TODO: show context menu
            },
            showDeleteConfirmDialog(id) {
                //TOOD: show confirm diaglog
            },
            delete(id) {
                //TODO: Delete
                this.$emit('route-deleted', id);
            }
        }
    };
    let timeout = null;
    const {createApp, onMounted, ref} = Vue
    const app = createApp({
        setup() {
            const webapp = ref(null);
            const routes = ref([]);
            const openingRoute = ref(null);
            const mode = ref();
            const openingRouteId = ref(null);
            const searchTerm = ref('');
            const RouteBaseUrl = '@string.Format("https://u{0}-{1}.mockserver.com", Model.WebApplication.User.Id, Model.WebApplication.Name)';
            const openRoute = async id => {
                if (mode.value !== 'EDIT') {
                    mode.value = 'EDIT';
                }
                let tempUrl = '@Url.Action(nameof(WebApplicationRoutesController.ApiGet), new { WebApplicationName = Model.WebApplication.Name, RouteId = -9999})';
                axios.get(tempUrl.replace('-9999', id))
                    .then(res => openingRoute.value = res.data)
            }
            const delayedSearch = () => {
                clearTimeout(timeout);
                // Make a new timeout set to go off in 800ms
                timeout = setTimeout(() => {
                    const IndexUrl = '@Url.Action(nameof(WebApplicationRoutesController.ApiIndex), new {WebApplicationName = Model.WebApplication.Name})';
                    const params = {
                        searchTerm: searchTerm.value
                    };
                    const query_params = new URLSearchParams(params);
                    fetch({
                        url: IndexUrl.trimEnd('?') + '?' + query_params
                    })
                        .then(res => res.json())
                        .then(res => routes.value = res);
                }, 800);
            }
            const newRoute = () => {
                mode.value = 'CREATE';
                openingRoute.value = {
                    name: '',
                    method: 'GET',
                    path: '',
                    integrationType: 1,
                    authorization: {
                        type: 0,
                        policies: []
                    }
                }
            }
            const onSubmit = () => {
                let url = ''
                if (mode.value === 'CREATE') {
                    url = '@Url.Action(nameof(WebApplicationRoutesController.ApiCreate), "WebApplicationRoutes", new { WebApplicationName = Model.WebApplication.Name})';
                } else {
                    let tempUrl = '@Url.Action(nameof(WebApplicationRoutesController.ApiEdit), new { WebApplicationName = Model.WebApplication.Name, RouteId = -9999})';
                    url = tempUrl.replace('-9999', openingRoute.value.id);
                }
                let route = openingRoute.value;
                axios.post(url, route)
                    .then((res) => {
                        alert(JSON.stringify(res.data));
                    });
            }
            onMounted(() => {
                webapp.value = JSON.parse('@Html.Raw(Json.Serialize(Model.WebApplication))');
                routes.value = JSON.parse('@Html.Raw(Json.Serialize(Model.Routes.Select(r => new {
                    r.Id,
                    r.Name,
                    r.Method,
                    r.Path
                    })))');
            })

            return {
                routes,
                RouteBaseUrl,
                openingRoute,
                openingRouteId,
                openRoute,
                newRoute,
                delayedSearch,
                searchTerm,
                webapp,
                onSubmit,
                mode
            }
        }
    });
    app.component('route-list', RouteList);
    //app.use(vuetify)
    app.mount('#app');
</script>
