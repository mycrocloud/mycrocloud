@using MockServer.Core.WebApplications
@model MockServer.Web.Models.WebApplications.Routes.RouteSaveModel
@{
    string formMode = ViewData["FormMode"]?.ToString() ?? "Create";
    ViewData["ModalTitle"] = formMode == "Create" ? "Create request" : "Edit request";
}
<div class="modal fade js-save-request-modal">
    <input type="hidden" name="formMode" value="@formMode">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">@ViewData["ModalTitle"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <div>
                        <div class="mb-2 row">
                            <label class="col-sm-2 col-form-label" asp-for="Name"></label>
                            <div class="col-sm-10">
                                <input class="form-control" type="text" asp-for="Name" aria-autocomplete="none" autocomplete="off">
                            </div>
                        </div>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div>
                        <div class="mb-2 row">
                            <label class="col-sm-2 col-form-label" asp-for="Description"></label>
                            <div class="col-sm-10">
                                <input class="form-control" type="text" asp-for="Description" autocomplete="off">
                            </div>
                        </div>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div>
                        <div class="mb-2 row">
                        <label class="col-sm-2 col-form-label" asp-for="Method"></label>
                        <div class="col-sm-10">
                            <select id="method" class="form-control" asp-for="Method">
                                @foreach (var method in Model.HttpMethodSelectListItems)
                                {
                                    <option value="@method.Value">@method.Text</option>
                                }
                            </select>
                        </div>
                        <span asp-validation-for="Method" class="text-danger"></span>
                    </div>
                    </div>
                    <div>
                        <div class="mb-2 row">
                            <label class="col-sm-2 col-form-label" asp-for="Path"></label>
                            <div class="col-sm-10">
                                <input id="path" class="form-control" type="text" asp-for="Path" placeholder="foo"
                                    autocomplete="off">
                            </div>
                        </div>
                        <span asp-validation-for="Path" class="text-danger"></span>
                    </div>
                    <div>
                        <div class="row mb-2">
                        <label class="col-sm-2 col-form-label pt-0">Intergration</label>
                           <div class="col-sm-10 form-group">
                                <div class="mb-1">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" value="@((int)RouteIntegrationType.MockResponse)"
                                            asp-for="IntegrationType" checked>
                                        <label class="form-check-label">Mock Response</label>
                                    </div>
                                    <span id="emailHelp" class="form-text text-muted ps-4">Return a "mock" response when a
                                        request matches an expectation</span>
                                </div>
                                <div class="mb-1">
                                    <div class="form-check">
                                            <input class="form-check-input" type="radio" value="@((int)RouteIntegrationType.RequestForward)"
                                                    asp-for="IntegrationType">
                                                <label class="form-check-label">From Forward</label>
                                            </div>
                                            <small id="emailHelp" class="form-text text-muted ps-4">Forward a request when the request
                                                matches an expectation (i.e. a dynamic port forwarding proxy)
                                                </small>
                                                </div>
                                                    <div>
                                                        <div class="form-check">
                                        <input class="form-check-input" type="radio" value="@((int)RouteIntegrationType.FunctionTrigger)"
                                            asp-for="IntegrationType">
                                        <label class="form-check-label">Function</label>
                                    </div>
                                    <small id="emailHelp" class="form-text text-muted ps-4">Execute a callback when a request
                                        matches an expectation, allowing the response to be created dynamically
                                    </small>
                                </div>
                            </div>
                        </div>
                        <span asp-validation-for="IntegrationType" class="text-danger"></span>
                    </div>
                    <div>
                        <div class="row mb-2">
                            <label class="col-sm-2 col-form-label">Preview Url</label>
                            <div class="col-sm-10">
                                <input class="form-control" readonly type="text" id="previewUrl" value="@Model.Method">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary js-save-button">Save</button>
            </div>
        </div>
    </div>
</div>
<script>
    function onInit() {
        const modal = $('.js-save-request-modal');
        const baseUrl = '@string.Format("https://{0}.{1}.mockserver.com", Model.WebApplication.User.Username , Model.WebApplication.Name)';
        generatePreviewUrl(modal);
        $('select[name=Method]', modal).on('change', function () {
            generatePreviewUrl(modal);
        });
        $('input[name=Path]', modal).on('keyup', function () {
            generatePreviewUrl(modal);
        });
        function generatePreviewUrl(modal) {
            const method = $('select[name=Method] option:selected', modal).text();
            const path = $('input[name=Path]', modal).val();
            $('#previewUrl', modal).val(method + '  ' + baseUrl + '/' + path);
        }
    }

    function onClose() {

    }
</script>