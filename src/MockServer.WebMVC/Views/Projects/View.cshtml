@using MockServer.Core.Models
@using MockServer.WebMVC.Extentions
@model MockServer.WebMVC.Models.Project.ProjectViewViewModel
@{
    ViewData["Title"] = "View";
}
<div class="my-3">
    <span><a class="text-decoration-none"
            href="@Url.Action("Index", "Home")">@(User.Parse<ApplicationUser>().Username)</a></span>
    <span>/</span>
    <strong><a class="text-decoration-none"
            href="@Url.Action("View", new {name=Model.ProjectInfo.Name})">@Model.ProjectInfo.Name</a></strong>
    <span class="badge bg-secondary">@Model.ProjectInfo.Accessibility</span>
</div>

<div>
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <button id="defaultOpen" class="nav-link" onclick="openTab(event, 'Requests')">Requests</button>
        </li>
        <li class="nav-item">
            <button class="nav-link" onclick="openTab(event, 'Settings')">Settings</button>
        </li>
    </ul>
    <!-- Tab content -->
    <div id="Requests" class="tabcontent">
        <partial name="_RequestsPartial" model="Model" />
    </div>

    <div id="Settings" class="tabcontent">
        <partial name="_SettingsPartial" model="Model.ProjectInfo" />
    </div>
</div>

@section Scripts
{
<script>
    document.getElementById("defaultOpen").click();
    function load(id) {
        $('#RequestOpen').load('/Projects/@Model.ProjectInfo.Name/Requests/' + id);
    }
    function openTab(evt, tabName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("nav-link");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
}