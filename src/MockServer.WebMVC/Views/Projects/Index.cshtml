@using MockServer.Core.Models
@using MockServer.WebMVC.Extentions;
@using MockServer.WebMVC.Controllers
@model MockServer.WebMVC.Models.Project.ProjectIndexViewModel;
@{
    ViewData["Title"] = "Your Projects";
}
<h3>@ViewData["Title"]</h3>
<div class="mt-2">
    <div>
        <input type="text" placeholder="Search projects" onchange="search()">
        <label for="type">Type</label>
        <select name="type" id="type">
            <option value="public">Public</option>
            <option value="private">Private</option>
        </select>
        <label for="sort">Sort</label>
        <select name="sort" id="sort">
            <option value="atoz">A to Z</option>
            <option value="recentlycreated">Recently created</option>
            <option value="recentlyupdated">Recently updated</option>
        </select>
        <a class="btn btn-primary text-decoration-none" asp-action="Create">Create</a>
    </div>
    <div class="my-3">
        <ul class="list-group list-group-flush">
            @foreach (var p in Model.Projects)
            {
                <li class="list-group-item">
                    <h4>
                        <a class="text-decoration-none"
                        href="@Url.Action(nameof(ProjectsController.View), new {name=p.Name})">@p.Name</a>
                        <span class="badge bg-secondary">@p.Accessibility</span>
                    </h4>
                    <p>@p.Description</p>
                </li>
            }
        </ul>
    </div>
</div>
@section Scripts {
<script>
    function search() {

    }
</script>
}