@using MockServer.Core.Enums
@using MockServer.WebMVC.Controllers
@model MockServer.WebMVC.Models.Project.ProjectIndexItem
<div class="p-3">
    <!-- Rename: Start-->
    <form asp-action="@nameof(ProjectsController.Rename)" asp-route-name="@Model.Name" method="post"
        class="mb-2 border-bottom pb-3">
        <div class="row">
            <div class="col-3">
                <strong for="newName" class="form-label font-semibold">Project name</strong>
                <div class="d-flex">
                    <input class="form-control me-2" type="text" name="newName" value="@Model.Name" autocomplete="off">
                    <button class="btn btn-sm border" type="submit">Rename</button>
                </div>
            </div>
        </div>
    </form>
    <!-- Rename: End-->
    <!-- Change accessibility: Start-->
    <div class="set-accessibility col-6">
        <div class="d-flex mb-2">
            <form id="frmSetAccessibility" asp-action="@nameof(ProjectsController.SetAccessibility)"
                asp-route-name="@Model.Name" method="post">
                <input type="hidden" name="accessibility">
            </form>
            <div class="me-auto">
                <strong>Accessibility</strong>
                @if (Model.Accessibility == ProjectAccessibility.Public)
                {
                    <div>The project is currently publicly accessible.</div>
                }
                else if (Model.Accessibility == ProjectAccessibility.Private)
                {
                    <div>The project is currently private.</div>
                }
            </div>
            <div class="dropdown mt-auto">
                <button class="btn btn-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Change accessibility
                </button>
                <ul class="dropdown-menu">
                    @if (Model.Accessibility == ProjectAccessibility.Private)
                    {
                        <li>
                            <button type="button" class="dropdown-item btn btn-default" name="setAccessibility"
                            data-accessibility="@ProjectAccessibility.Public" data-bs-toggle="modal"
                            data-bs-target="#set-accessibility-confirm-modal">
                                Change to public
                            </button>
                        </li>
                    }
                    else if (Model.Accessibility == ProjectAccessibility.Public)
                    {
                        <li>
                            <button type="button" class="dropdown-item btn btn-default" name="setAccessibility"
                            data-accessibility="@ProjectAccessibility.Private" data-bs-toggle="modal"
                            data-bs-target="#set-accessibility-confirm-modal">
                                Change to private
                            </button>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div>
            <strong>Private key</strong>
            <form name="generateAccessKey" asp-action="@nameof(ProjectsController.GenerateKey)"
                asp-route-name="@Model.Name" method="post" class="mb-3 pb-3 border-bottom">
                <div class="d-flex">
                    <div class="input-group d-flex me-3" style="max-width: 500px;">
                        <input id="privateKey" type="text" class="form-control" value="@Model.PrivateKey" readonly>
                        <button id="btnCopyKeyToClipboard" type="button" class="input-group-text">
                            <i class="bi bi-clipboard">
                            </i></button>
                    </div>
                    <div>
                        <button class="btn btn-default border" type="submit">Generate</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!-- Change accessibility: End-->
    <!-- Delete: Start-->
    <div class="d-flex col-8">
        <div class="me-auto">
            <strong>Delete this repository</strong>
            <p class="fw-normal">Once you delete a repository, there is no going back. Please be certain.</p>
        </div>
        <div class="mb-auto">
            <button type="button" id="btnDeleteProject" class="btn btn-danger" data-bs-toggle="modal"
                data-bs-target="#deleteConfirmModal">Delete project</button>
        </div>
    </div>
    <!-- Delete: End-->
</div>

<!-- Change accessibility confirm modal-->
<div class="modal fade" id="set-accessibility-confirm-modal" tabindex="-1" aria-hidden="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Change project accessibility</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to change project accessibility?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="btnSubmitSetAccessiblity" class="btn btn-light">Change</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel">Delete project?</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning mb-3">
                    This action <strong>cannot</strong> be undone.
                    This will permanently delete everything in the <strong>@Model.Name</strong> project.
                </div>
                <form asp-action="@nameof(ProjectsController.Delete)" asp-route-name="@Model.Name">
                    <div>
                        <div class="mb-3">
                            <label class="form-label">Please type <strong>@Model.Name</strong> to
                                confirm.</label>
                            <input id="project-name" class="form-control" type="text" autocomplete="off">
                        </div>
                        <div class="d-flex">
                            <button type="button" class="ms-auto me-3 btn btn-secondary"
                                data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger px-4" disabled>Delete</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const projectName = '@Model.Name';
    $(function () {
        $('button[name=setAccessibility]').click(function () {
            $('#frmSetAccessibility input[name=accessibility]').val($(this).data('accessibility'));
            //TODO: build modal

            $('#btnSubmitSetAccessiblity').click(function () {
                $('#frmSetAccessibility').submit();
            });
        });
        $("#btnCopyKeyToClipboard").click(function () {
            var key = $('#privateKey').val();
            navigator.clipboard.writeText(key)
                .then(() => {
                    $("#btnCopyKeyToClipboard i").addClass('bi-clipboard-check')
                        .addClass('text-info')
                        .removeClass('bi-clipboard');
                }).catch((e) => {
                    alert('error: ' + e.message);
                });
        });

        $('form[name=generateAccessKey]').submit(function (e) {
            e.preventDefault();
            $.post({
                url: $(this).attr('action'),
                success: function (data) {
                    $('#privateKey').val(data.key);
                }
            });
        });
    });
    $(function () {
        $('#btnDeleteProject').click(function () {
            $('#deleteConfirmModal button[type=submit]').attr('disabled', true);
            $('#deleteConfirmModal #project-name').val('');
        });
        $('#deleteConfirmModal #project-name').keyup(function () {
            console.log('project-name keyup');
            const name = $(this).val();
            if (name === projectName) {
                if ($('#deleteConfirmModal button[type=submit]').prop('disabled') === true) {
                    $("#deleteConfirmModal button[type=submit]").prop("disabled", false);
                }
            } else {
                if ($('#deleteConfirmModal button[type=submit]').prop('disabled') === false) {
                    $("#deleteConfirmModal button[type=submit]").prop("disabled", true);
                }
            }
        });
    });
</script>