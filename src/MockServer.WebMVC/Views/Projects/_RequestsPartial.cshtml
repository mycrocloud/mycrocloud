@using MockServer.WebMVC.Controllers
@model MockServer.WebMVC.Models.Project.ProjectViewViewModel
<div class="row h-100 p-2">
    <div class="col-3 h-100 overflow-scroll">
        <div class="d-grid gap-2">
            <button type="button" onclick="getCreateRequestPartial()" class="btn btn-sm bg-violet-500 text-white"
                data-bs-toggle="modal" data-bs-target="#createRequestModalCenter">
                New
            </button>
        </div>
        <div class="request-container">
            <ul id="requests" class="list-group list-group-flush mt-2">
                @foreach (var req in Model.Requests)
                {
                    <li data-request-id="@req.Id" id="request-@req.Id" class="list-group-item p-1 rounded">
                        <div class="row">
                            <div class="col" onclick="openRequest(@req.Id)">
                                <span class="text-base fw-light text-slate-700">@req.Name</span>
                                <div>
                                    <small class="badge rounded-pill py-1 fw-normal text-white me-1 bg-sky-400"
                                    style="width: 50px;">@req.Method</small>
                                    <small class="text-muted">/@req.Path</small>
                                </div>
                            </div>
                            <div class="p-0" style="width: 40px;">
                                <button class="btn btn-sm btn-context-menu" type="button">
                                    ...
                                </button>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="col-9 h-100" id="RequestOpen">
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="createRequestModalCenter" tabindex="-1" role="dialog"
    aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div id="createRequestModalContent" class="modal-content">

        </div>
    </div>
</div>
<template id="context-menu">
    <div class="context-menu-container">
        <div class="btn-group-vertical" role="group">
            <button name="btnDelete" type="button" class="btn btn-default text-danger">Delete</button>
        </div>
    </div>
</template>

<!-- Modal -->
<template id="requestDeleteConfirmModalTemplate">
    <div class="modal fade" id="requestDeleteConfirmModal" tabindex="-1" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete confirm</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are your sure want to delete request?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button name="btnDelete" type="button" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
</template>
<script>
    const documentClickHandler = function (e) {
        const menu = $('.context-menu-container');
        const button = $('.btn-clicked');
        // Check if the target of the click event is the context menu or one of its children
        if (e.target !== menu[0] && !menu.has(e.target).length && !$(e.target).is(button)) {
            button.removeClass('btn-clicked');
            // Remove the event handler
            $(document).off('click', documentClickHandler);
            //Remove the menu
            menu.remove();
        }
    }
    $(function () {
        $('#requests .btn-context-menu').click(function (e) {
            $('.btn-clicked').removeClass('btn-clicked');
            $(document).off('click', documentClickHandler);
            $('.context-menu-container').remove();

            const requestId = $(this).closest('li').data('request-id');
            $(this).addClass('btn-clicked');
            var position = $(this).offset();
            const template = document.querySelector('#context-menu');
            const instance = template.content.cloneNode(true);
            var container = $('.context-menu-container', instance);
            console.log('position.left: ' + position.left);
            console.log('container.width: ' + container.width());
            console.log('container.outerWidth: ' + container.outerWidth());
            console.log('container.innerHeight: ' + container.innerHeight());
            console.log('button.outerWidth: ' + $(this).outerWidth());
            var left = (position.left - 70 + $(this).outerWidth()) + 'px';
            var top = (position.top + $(this).outerHeight()) + 'px';
            container.css({
                'left': left,
                'top': top
            });
            const deleteButton = $('button[name=btnDelete]', container);
            deleteButton.click(function () {
                const modal = document.querySelector('#requestDeleteConfirmModalTemplate')
                    .content.cloneNode(true);
                $('body').append(modal);
                $("#requestDeleteConfirmModal button[name=btnDelete]").click(function () {
                    location.reload();
                });
                $("#requestDeleteConfirmModal").modal("show");
            });
            $('.request-container').append(container);
            $(document).click(documentClickHandler);
        });
    });

    function deleteRequest(id) {
        if (confirm('delete request ' + id + '?')) {
            $.ajax({
                type: 'POST',
                url: '/Projects/@Model.ProjectInfo.Name' + '/requests/' + id + '/delete',
                success: function () {
                    $('#requests ' + '#' + id).remove();
                }
            });
        }
    }

    function getCreateRequestPartial() {
        $.get({
            async: false,
            url: '@Url.Action(nameof(RequestsController.GetCreatePartial), "Requests", new { projectName = ViewData["ProjectName"]})',
            success: function (data) {
                $('#createRequestModalContent').html(data);
            }
        })
    }

    function openRequest(id) {
        var selected = $('#request-' + id);
        selected.parent().find('li').removeClass('bg-gray');
        selected.addClass('bg-gray');
        $('#RequestOpen').load('/Projects/@ViewData["ProjectName"]/Requests/' + id);
    }
</script>