@model MockServer.Core.Models.Authorization.JwtHandlerConfiguration
@{
    var rv = new { name = ViewData["ProjectName"] };
}
<div class="row flex-nowrap">
    <partial name="/Views/ProjectSettings/Shared/_SideBar.cshtml" model="@ViewData["ProjectName"]" />
    <div class="col py-3">
        <div class="w-75">
            <h5>Create JWT Authentication</h5>
            <form role="form">
                <div class="card mb-2">
                    <div class="card-header">
                        Standard JWT Claims
                    </div>
                    <div class="card-body">
                        <div class="mb-3 row">
                            <label for="issuer" class="col-sm-2 col-form-label">Issuer</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" asp-for="Issuer">
                            </div>
                            @* <p class="col-sm-5 text-success">Identifier (or, name) of the server or system
                                issuing
                                the
                                token. Typically a DNS name, but doesn't have to be.</p> *@
                        </div>
                        @* <div class="mb-3 row">
                            <div class="col-sm-2">
                            <label for="issuedAt" class="col-form-label">Issued At</label>
                            <button type="button" class="btn btn-sm pb-2 text-info" data-bs-toggle="tooltip"
                            data-bs-placement="top" title="Tooltip on top">
                            <i class="bi bi-info-circle"></i>
                            </button>
                            </div>
                            <div class="col-sm-6">
                            <input type="text" class="form-control" id="issuedAt">
                            </div>
                            <div class="col-sm-4">
                            <button type="button" class="btn btn-success btn-xs">now</button>
                            </div>
                            <p class="text-success">Date/time when the token was issued. (defaults to now)
                            &nbsp;&nbsp;
                            <button type="button" class="btn btn-success btn-xs"
                            data-bind="click:issuedAtSetNow">now</button>
                            </p>
                            </div> *@
                        <div class="mb-3 row">
                            <label for="expiration" class="col-sm-2 col-form-label">Expiration</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="expiration">
                            </div>
                            <div class="col-sm-4">
                                <button type="button" class="btn btn-success btn-xs">in 60 minutes</button>
                                <button type="button" class="btn btn-success btn-xs">in 1 days</button>
                            </div>
                            @* <p class="text-success">Date/time at which point the token is no longer valid.
                                (defaults
                                to one year from now)
                                &nbsp;&nbsp;
                                <button type="button" class="btn btn-success btn-xs"
                                data-bind="click:expirationSetNow">now</button>
                                <button type="button" class="btn btn-success btn-xs"
                                data-bind="click:expirationSetTwentyMinutes">in 20 minutes</button>
                                <button type="button" class="btn btn-success btn-xs"
                                data-bind="click:expirationSetOneYear">in 1 year</button>
                                </p> *@
                        </div>
                        <div class="mb-3 row">
                            <label for="audience" class="col-sm-2 col-form-label">Audience</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="audience">
                            </div>
                            @* <p class="col-sm-5 text-success">Intended recipient of this token; can be any string, as
                                long as the other end uses the same string when validating the token. Typically a
                                DNS
                                name.</p>*@
                        </div>
                        <div class="mb-3 row">
                            <label for="subject" class="col-sm-2 col-form-label">Subject</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="subject">
                            </div>
                            @* <p class="col-sm-5 text-success">Identifier (or, name) of the user this token
                                represents.
                                </p>*@
                        </div>
                    </div>
                </div>
                <div class="card mb-2">
                    <div class="card-header">
                        Additional Claims
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <ul>
                                <li>To set a static value, use the format static[value]. For example, to set the claim
                                    the value to
                                    "example.com"ã€€use
                                    static[example.com]</li>
                                <li>To set a dynamic value bound from a request data like header or query, use the
                                    format [source][name].
                                    For example, to set the value of 'x-user-id' header in the request, use
                                    header[x-user-id]. header and query and
                                    body are supported sources.</li>
                            </ul>
                        </div>
                        <div>
                            <table class="table" id="additional-claims-table">
                                <thead>
                                    <tr>
                                        <th>Claim Type</th>
                                        <th>Value</th>
                                        <th>&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        Model.AdditionalClaims.Add(new("", ""));
                                    }
                                    @for (int i = 0; i < Model.AdditionalClaims.Count; i++)
                                    {
                                        <tr>
                                            <td class="align-middle" style="width:150px">
                                                <input type="text" class="form-control js-claim-input js-claim-type" asp-for="AdditionalClaims[i].Type">
                                            </td>
                                            <td class="align-middle">
                                                <input type="text" class="form-control js-claim-input js-claim-name" asp-for="AdditionalClaims[i].Value">
                                            </td>
                                            <td class="align-middle">
                                                <button class="btn js-claim-delete" type="button">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="card mb-2">
                    <div class="card-header">
                        Algorithm & Secret Key
                    </div>
                    <div class="card-body">
                        <div class="mb-3 row">
                            <label for="algorithm" class="col-sm-2 col-form-label">Algorithm</label>
                            <div class="col-sm-10">
                                <input type="hidden" asp-for="Algorithm">
                                <div class="dropdown">
                                    <button class="btn btn-default dropdown-toggle" type="button"
                                        data-bs-toggle="dropdown">
                                        <span id="selectedAlgorithm">HS256</span>
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><button type="button" data-algorithm="HS256"
                                                class="dropdown-item js-select-algorithm" href="#">HS256</button></li>
                                        <li><button type="button" data-algorithm="HS384"
                                                class="dropdown-item js-select-algorithm" href="#">HS384</button></li>
                                        <li><button type="button" data-algorithm="HS512"
                                                class="dropdown-item js-select-algorithm" href="#">HS512</button></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label for="key" class="col-sm-2 col-form-label">Key</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" id="key">
                            </div>
                            <div class="col-sm-2">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-success dropdown-toggle"
                                        data-bs-toggle="dropdown">Generate
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><button data-bytes="32" type="button"
                                                class="dropdown-item js-generate-key">32-byte key</button></li>
                                        <li><button data-bytes="64" type="button"
                                                class="dropdown-item js-generate-key">64-byte key</button></li>
                                        <li><button data-bytes="128" type="button"
                                                class="dropdown-item js-generate-key">128-byte key</button></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>
<template id="additional-claim-row-template">
    <tr>
        <td class="align-middle" style="width:150px">
            <input type="text" class="form-control js-claim-input js-claim-type">
        </td>
        <td class="align-middle">
            <input type="text" class="form-control js-claim-input js-claim-name">
        </td>
        <td class="align-middle">
            <button class="btn js-claim-delete" type="button">
                <i class="bi bi-trash"></i>
            </button>
        </td>
    </tr>
</template>
<script>
    $(function () {
        $('.js-select-algorithm').click(function () {
            $('input[name=Algorithm]').val($(this).data('algorithm'));
            $('#selectedAlgorithm').html($(this).data('algorithm'));
        });
        $('.js-generate-key').click(function () {
            
        });

        $('body').on('keyup', '.js-claim-input', function(e) {
            const index = $(this).closest('tr').index();
            if(index == $("#additional-claims-table tbody tr").length - 1) {
                //TODO: append row
            }
        });

        $('body').on('click', '.js-claim-delete', function(e) {
            const tr = $(this).closest('tr');
            tr.remove();
        });
    });
</script>