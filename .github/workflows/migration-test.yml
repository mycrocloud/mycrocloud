#ref: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
#ref: https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers#running-jobs-directly-on-the-runner-machine
on:
  push:
    branches: [dev]

jobs:
  # Label of the runner job
  build:
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16.2-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.200

      - name: Install dependencies
        working-directory: src/Services/WebApp/WebApp.Migrations
        run: dotnet restore

      - name: Update database
        working-directory: src/Services/WebApp/WebApp.Infrastructure
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=mycrocloud;Username=postgres;Password=postgres"
        run: dotnet ef database update -s ../WebApp.Migrations/WebApp.Migrations.csproj