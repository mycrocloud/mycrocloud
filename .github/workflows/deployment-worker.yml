name: Deployment Worker

on:
  push:
    branches:
      - dev

    paths:
      - "src/Services/WebApp/Deployment/worker/**"

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-deployment-worker
  WORK_DIR: src/Services/WebApp/Deployment

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5.5.1
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.17.0
        with:
          context: ${{env.WORK_DIR}}/worker
          file: ${{env.WORK_DIR}}/worker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            COMMIT_HASH=${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Install SSH key
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
        env:
          SSH_HOST: ${{ vars.SSH_HOST}}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy
        shell: bash
        run: |
          ssh $SSH_USERNAME@$SSH_HOST "
              cd workspaces/mycrocloud-deploy/dev/deployment \
                && docker compose down $SERVICE \
                && docker compose pull $SERVICE \
                && docker compose up $SERVICE -d
              "
        env:
          SSH_HOST: ${{ vars.SSH_HOST}}
          SSH_USERNAME: ${{ vars.SSH_USERNAME }}
          SERVICE: worker

      - name: Cleanup
        shell: bash
        run: |
          rm -r ~/.ssh
