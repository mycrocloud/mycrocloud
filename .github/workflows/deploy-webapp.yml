name: Deploy to WebApp dev server

on:
  push:
    branches:
      - dev
    # paths:
    #   - 'src/Web/WebApp/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-webapp
  WORK_DIR: src/WebApp

  BASE_API_URL: https://dev.api.mycrocloud.online
  AUTH0_DOMAIN: https://dev-vzxphouz.us.auth0.com
  AUTH0_CLIENTID: 8YECKUMM3I7ejQgsVky40b5LooQB0YFf
  AUTH0_AUDIENCE: https://dev.api.mycrocloud.online
  APIGATEWAY_DOMAIN: https://dev.apigw-__app_id__.mycrocloud.online

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download .env file from server
        working-directory: ${{env.WORK_DIR}}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          scp -i ~/.ssh/id_rsa ${{ vars.SSH_USERNAME }}@${{ vars.SSH_HOST }}:~/${{ vars.WORK_DIR }}/config/WebApp/.env .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{env.WORK_DIR}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Install ssh keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to dev server
        env:
          TAG: ${{ needs.build-and-push-image.outputs.tags }}
        run: |
          ssh ${{ vars.SSH_USERNAME }}@${{ vars.SSH_HOST }} -i ~/.ssh/id_rsa "cd ${{ vars.WORK_DIR }} && docker compose down webapp && docker compose pull webapp && docker compose up -d webapp"
      
      - name: cleanup
        run: rm -rf ~/.ssh