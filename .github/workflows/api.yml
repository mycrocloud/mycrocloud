name: Publish Api

on:
  push:
    branches:
      - dev
    paths: 
      - 'src/Services/WebApp/WebApp.Domain/**'
      - 'src/Services/WebApp/WebApp.Infrastructure/**'
      - 'src/Services/WebApp/WebApp.RestApi/**'
      
  workflow_dispatch: 
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-api
  WORK_DIR: src/Services/WebApp
  DEPLOY_DOMAIN: https://api.mycrocloud.online

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download appsettings.json file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          scp ${{ vars.SSH_USERNAME }}@${{ vars.SSH_HOST }}:$SOURCE $DESTINATION
        env:
          SOURCE: workspaces/mycrocloud-deploy/dev/config/Services/WebApp/WebApp.RestApi/appsettings.json
          DESTINATION: ${{env.WORK_DIR}}/WebApp.RestApi/appsettings.json

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{env.WORK_DIR}}
          file: ${{env.WORK_DIR}}/WebApp.RestApi/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            COMMIT_HASH=${{ github.sha }}

      - name: Cleanup
        run: rm -r ~/.ssh

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy
        uses: ./.github/actions/deploy-action
        with:
          ssh-host: ${{ vars.SSH_HOST}}
          ssh-username: ${{ vars.SSH_USERNAME }}
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          service: api

      - name: Check
        run: |
          ACCESS_TOKEN=$(curl --request POST \
            --url ${{ vars.AUTH0_DOMAIN }}/oauth/token \
            --header 'content-type: application/json' \
            --data '{"client_id":"${{ vars.M2M_APP_CLIENT_ID }}","client_secret":"${{ secrets.M2M_APP_CLIENT_SECRET }}","audience":"${{ vars.API_IDENTIFIER }}","grant_type":"client_credentials"}' |
            jq .access_token)

          INFORMATIONAL_VERSION=$(curl -X GET '${{ env.DEPLOY_DOMAIN }}/_assembly' -H "Authorization: Bearer $ACCESS_TOKEN" | jq .informationalVersion)
          
          echo $INFORMATIONAL_VERSION
          